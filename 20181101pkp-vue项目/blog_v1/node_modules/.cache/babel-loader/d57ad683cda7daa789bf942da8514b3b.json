{"remainingRequest":"C:\\xampp\\htdocs\\myproject1_show\\blog_user\\blog_v1\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\myproject1_show\\blog_user\\blog_v1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\myproject1_show\\blog_user\\blog_v1\\src\\views\\menu.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\xampp\\htdocs\\myproject1_show\\blog_user\\blog_v1\\src\\views\\menu.vue","mtime":1536855500110},{"path":"C:\\xampp\\htdocs\\myproject1_show\\blog_user\\blog_v1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531859503174},{"path":"C:\\xampp\\htdocs\\myproject1_show\\blog_user\\blog_v1\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\xampp\\htdocs\\myproject1_show\\blog_user\\blog_v1\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {};\n  },\n  methods: {},\n  mounted: function mounted() {\n    //查找触发事件的元素\n    //绑定事件\n    //查找要修改的元素\n    //修改元素\n    //查找触发事件的元素\n    var spans = document.querySelectorAll(\"ul.tree>li>span\"); //绑定事件\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = spans[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var span = _step.value;\n\n        span.onclick = function () {\n          var span = this; //如果当前span的class是open\n\n          if (span.className === \"open\") span.className = \"\"; //清除当前span的class\n          else {\n              //否则\n              //查找ul.tree下的li下的class为open的span,保存在变量openSpan中\n              var openSpan = document.querySelector(\"ul.tree>li>span.open\");\n              if (openSpan != null) //如果找到openSpan\n                //清除openSpan的class\n                openSpan.className = \"\"; //给当前span设置class为open\n\n              span.className = \"open\";\n            }\n        };\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,eAAA;AACA,MADA,kBACA;AACA,WAAA,EAAA;AAGA,GALA;AAMA,WAAA,EANA;AASA,SATA,qBASA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAA,QACA,SAAA,gBAAA,CAAA,iBAAA,CADA,CAPA,CASA;;AATA;AAAA;AAAA;;AAAA;AAUA,2BAAA,KAAA,8HAAA;AAAA,YAAA,IAAA;;AACA,aAAA,OAAA,GAAA,YAAA;AACA,cAAA,OAAA,IAAA,CADA,CAEA;;AACA,cAAA,KAAA,SAAA,KAAA,MAAA,EACA,KAAA,SAAA,GAAA,EAAA,CADA,CACA;AADA,eAEA;AAAA;AACA;AACA,kBAAA,WAAA,SAAA,aAAA,CACA,sBADA,CAAA;AAGA,kBAAA,YAAA,IAAA,EAAA;AACA;AACA,yBAAA,SAAA,GAAA,EAAA,CAPA,CAQA;;AACA,mBAAA,SAAA,GAAA,MAAA;AACA;AACA,SAhBA;AAiBA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AAtCA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n      <h2 style=\"text-align:center\">伸缩二级菜单</h2>\r\n     <ul class=\"tree\" style=\"text-align:center\">\r\n\t\t<li>\r\n\t\t\t<span class=\"open\">考勤管理</span>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>日常考勤</li>\r\n\t\t\t\t<li>请假申请</li>\r\n\t\t\t\t<li>加班/出差</li>\r\n\t\t\t</ul>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<span>信息中心</span>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>通知公告</li>\r\n\t\t\t\t<li>公司新闻</li>\r\n\t\t\t\t<li>规章制度</li>\r\n\t\t\t</ul>\r\n\t\t</li>\r\n\t\t<li><span>协同办公</span>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>公文流转</li>\r\n\t\t\t\t<li>文件中心</li>\r\n\t\t\t\t<li>内部邮件</li>\r\n\t\t\t\t<li>即时通信</li>\r\n\t\t\t\t<li>短信提醒</li>\r\n\t\t\t</ul>\r\n\t\t</li>\r\n\t</ul>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default{\r\n        data(){\r\n            return {\r\n            \r\n            }\r\n        },\r\n        methods:{\r\n          \r\n        },\r\n        mounted(){\r\n            \t //查找触发事件的元素\r\n\t//绑定事件\r\n\t\t//查找要修改的元素\r\n\t\t//修改元素\r\n\r\n\t//查找触发事件的元素\r\n\tvar spans=\r\n\t\tdocument.querySelectorAll(\"ul.tree>li>span\");\r\n\t//绑定事件\r\n\tfor(var span of spans){\r\n\t\tspan.onclick=function(){\r\n\t\t\tvar span=this;\r\n\t\t\t//如果当前span的class是open\r\n\t\t\tif(span.className===\"open\")\r\n\t\t\t\tspan.className=\"\";//清除当前span的class\r\n\t\t\telse{//否则\r\n\t\t\t\t//查找ul.tree下的li下的class为open的span,保存在变量openSpan中\r\n\t\t\t\tvar openSpan=document.querySelector(\r\n\t\t\t\t\t\"ul.tree>li>span.open\"\r\n\t\t\t\t);\r\n\t\t\t\tif(openSpan!=null)//如果找到openSpan\r\n\t\t\t\t\t//清除openSpan的class\r\n\t\t\t\t\topenSpan.className=\"\";\r\n\t\t\t\t//给当前span设置class为open\r\n\t\t\t\tspan.className=\"open\";\r\n\t\t}\r\n\t}\r\n}\r\n        }\r\n  }\r\n</script>\r\n<style>\r\n   li{\r\n\tlist-style:none;\r\n}\r\n  li span{\r\n\tpadding-left: 20px;\r\n\tcursor: pointer;\r\n  background: url(\"../assets/img/add.png\") no-repeat center left;\r\n}\r\n  li ul{\r\n\theight:0;\r\n\toverflow:hidden;\r\n\ttransition:all .5s linear;\r\n  }\r\n  .open{ background: url(\"../assets/img/minus.png\") no-repeat center left; }\r\n  .open+ul{ height:104px; }\r\n</style>"],"sourceRoot":"src\\views"}]}